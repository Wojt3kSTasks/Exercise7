// <auto-generated />
using System;
using Exercise7.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercise7.Migrations
{
    [DbContext(typeof(DeveloperContext))]
    [Migration("20230614194136_Init_db")]
    partial class Init_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exercise7.Models.Developer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TeamID");

                    b.ToTable("Developer", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "Jan",
                            LastName = "Piarski",
                            TeamID = 1
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "Anna",
                            LastName = "Jenkinsowa",
                            TeamID = 1
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "Piotr",
                            LastName = "Bambik",
                            TeamID = 1
                        },
                        new
                        {
                            ID = 4,
                            FirstName = "Magda",
                            LastName = "Logowaczenko",
                            TeamID = 2
                        },
                        new
                        {
                            ID = 5,
                            FirstName = "Robert",
                            LastName = "Bugowski",
                            TeamID = 2
                        },
                        new
                        {
                            ID = 6,
                            FirstName = "Katarzyna",
                            LastName = "Testonaprodna",
                            TeamID = 3
                        });
                });

            modelBuilder.Entity("Exercise7.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeveloperID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectStatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DeveloperID");

                    b.HasIndex("ProjectStatusID");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Deadline = new DateTime(2023, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project 1",
                            ProjectStatusID = 2
                        },
                        new
                        {
                            ID = 2,
                            Deadline = new DateTime(2023, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project 2",
                            ProjectStatusID = 1
                        },
                        new
                        {
                            ID = 3,
                            Deadline = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project 3",
                            ProjectStatusID = 1
                        });
                });

            modelBuilder.Entity("Exercise7.Models.ProjectStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Project_Status", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Started"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Finished"
                        });
                });

            modelBuilder.Entity("Exercise7.Models.ProjectTeam", b =>
                {
                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("ProjectID", "TeamID");

                    b.HasIndex("TeamID");

                    b.ToTable("Project_Team", (string)null);

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            TeamID = 1
                        },
                        new
                        {
                            ProjectID = 1,
                            TeamID = 3
                        },
                        new
                        {
                            ProjectID = 2,
                            TeamID = 2
                        },
                        new
                        {
                            ProjectID = 2,
                            TeamID = 1
                        });
                });

            modelBuilder.Entity("Exercise7.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Team", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Team 1"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Team 2"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Team 3"
                        });
                });

            modelBuilder.Entity("Exercise7.Models.Developer", b =>
                {
                    b.HasOne("Exercise7.Models.Team", "Team")
                        .WithMany("Developers")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Exercise7.Models.Project", b =>
                {
                    b.HasOne("Exercise7.Models.Developer", null)
                        .WithMany("Prescriptions")
                        .HasForeignKey("DeveloperID");

                    b.HasOne("Exercise7.Models.ProjectStatus", "ProjectStatus")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectStatus");
                });

            modelBuilder.Entity("Exercise7.Models.ProjectTeam", b =>
                {
                    b.HasOne("Exercise7.Models.Project", "Project")
                        .WithMany("ProjectTeams")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercise7.Models.Team", "Team")
                        .WithMany("ProjectTeams")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Exercise7.Models.Developer", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Exercise7.Models.Project", b =>
                {
                    b.Navigation("ProjectTeams");
                });

            modelBuilder.Entity("Exercise7.Models.ProjectStatus", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Exercise7.Models.Team", b =>
                {
                    b.Navigation("Developers");

                    b.Navigation("ProjectTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
